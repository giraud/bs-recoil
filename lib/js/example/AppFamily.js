// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var Recoil = require("recoil");
var Caml_obj = require("rescript/lib/js/caml_obj.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");

function isSelected(items, item) {
  return Belt_Option.isSome(Belt_Array.getBy(items, (function (i) {
                    return Caml_obj.caml_equal(i, item);
                  })));
}

function add(items, item) {
  return Belt_Array.concat(items, [item]);
}

function remove(items, item) {
  return Belt_Array.keep(items, (function (i) {
                return Caml_obj.caml_notequal(i, item);
              }));
}

var listFamily = Recoil.atomFamily({
      key: "List",
      default: []
    });

function AppFamily$Item(Props) {
  var item = Props.item;
  var atom = Props.atom;
  var match = Recoil.useRecoilState(atom(item));
  var setSelected = match[1];
  var selected = match[0];
  return React.createElement("li", {
              className: selected ? "bg-red" : "bg-white",
              onClick: (function (_e) {
                  return setSelected(function (param) {
                              return !selected;
                            });
                })
            }, item);
}

var Item = {
  make: AppFamily$Item
};

function AppFamily$List(Props) {
  var id = Props.id;
  var items = Props.items;
  var listAtom = listFamily(id);
  var rwItemSelector = Recoil.selectorFamily({
        key: "ListSelection",
        get: (function (item) {
            return function (param) {
              return isSelected(param.get(listAtom), item);
            };
          }),
        set: (function (item) {
            return function (param, selected) {
              return param.set(listAtom, (function (previous) {
                            if (selected) {
                              return Belt_Array.concat(previous, [item]);
                            } else {
                              return remove(previous, item);
                            }
                          }));
            };
          })
      });
  return React.createElement("div", undefined, "List " + id, React.createElement("ul", undefined, Belt_Array.map(items, (function (item) {
                        return React.createElement(AppFamily$Item, {
                                    item: item,
                                    atom: rwItemSelector,
                                    key: item
                                  });
                      }))));
}

var List = {
  make: AppFamily$List
};

function AppFamily(Props) {
  return React.createElement("div", undefined, React.createElement(AppFamily$List, {
                  id: "A",
                  items: [
                    "item1",
                    "item2",
                    "item3",
                    "item4"
                  ]
                }), React.createElement(AppFamily$List, {
                  id: "B",
                  items: [
                    "item1",
                    "item2",
                    "item3",
                    "item4"
                  ]
                }));
}

var make = AppFamily;

exports.isSelected = isSelected;
exports.add = add;
exports.remove = remove;
exports.listFamily = listFamily;
exports.Item = Item;
exports.List = List;
exports.make = make;
/* listFamily Not a pure module */
